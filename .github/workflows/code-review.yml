name: code-review

on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
      - name: Install GoogleGenerativeAI
        run: |
          npm install @google/generative-ai
      - name: Get git diff
        run: |
          git fetch origin "${{ github.event.pull_request.base.ref }}"
          git fetch origin "${{ github.event.pull_request.head.ref }}"
          git diff "origin/${{ github.event.pull_request.base.ref }}" > "diff.txt"
          export DIFF_OUTPUT=$(cat "diff.txt")
      - name: Run Gemini-1.5-flash
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const { GoogleGenerativeAI } = require("@google/generative-ai");
            const diff_output = process.env.DIFF_OUTPUT;
            
            const genAI = new GoogleGenerativeAI("${{ secrets.GEMINI_API_KEY }}");
            const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash"});
            
            const instruction = `You are a senior software engineer, and you need to do a code review based on the results of a given git diff. You need to review the code from different perspectives and let us know if anything needs to be fixed. The output format is [{“path”:“{ filepath }”, “line”: { line }, “text”: { review comment }, “side”: “RIGHT"}] format must be respected.\n<git diff>${diff_output}</git diff>`;
            const result = await model.generateContent(prompt);
            const response = await result.response;
            const text = response.text;
            
            fs.writeFileSync('res.txt',text);
            console.log('Save Results!')
      - name: Export System Var
        run: |
          export COMMENT=$(cat "res.txt")
      - name: Add Pull Request Review Comment
        uses: nbaztec/add-pr-review-comment@v1.0.7
        with:
          comments: |
            ${{ COMMENT }}
          repo-token: ${{ secrets.GH_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: false # This is the default